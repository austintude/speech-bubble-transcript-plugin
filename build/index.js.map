{"version":3,"file":"index.js","mappings":"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","sources":["webpack://transcripts-block/external window [\"wp\",\"blockEditor\"]","webpack://transcripts-block/external window [\"wp\",\"blocks\"]","webpack://transcripts-block/external window [\"wp\",\"components\"]","webpack://transcripts-block/external window [\"wp\",\"element\"]","webpack://transcripts-block/webpack/bootstrap","webpack://transcripts-block/webpack/runtime/compat get default export","webpack://transcripts-block/webpack/runtime/define property getters","webpack://transcripts-block/webpack/runtime/hasOwnProperty shorthand","webpack://transcripts-block/webpack/runtime/make namespace object","webpack://transcripts-block/./src/index.js"],"sourcesContent":["module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\r\n * Registers a new block provided a unique name and an object defining its behavior.\r\n *\r\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\r\n */\r\nimport { registerBlockType } from '@wordpress/blocks';\r\nimport { useBlockProps, MediaUpload } from '@wordpress/block-editor';\r\nimport { Button } from '@wordpress/components';\r\n\r\n\r\n// Add console logs here\r\nconsole.log('MediaUpload: ', MediaUpload);\r\nconsole.log('Button: ', Button);\r\nconsole.log('useBlockProps: ', useBlockProps);\r\n\r\nregisterBlockType( 'transcript-blocks/transcript-block', {\r\n    apiVersion: 2,\r\n    title: 'Transcript Block',\r\n    description: 'Add downloadable transcripts to your post.',\r\n    category: 'media',\r\n    icon: 'media-text',\r\n    supports: {\r\n        html: false,\r\n    },\r\n    attributes: {\r\n        url: {\r\n            type: 'string',\r\n            default: '',\r\n        },\r\n        transcript: {\r\n            type: 'array',\r\n            default: [],\r\n        },\r\n    },\r\n    edit: ( { attributes, setAttributes } ) => {\r\n        return (\r\n            <div {...useBlockProps()}>\r\n                <MediaUpload\r\n                    onSelect={ async ( media ) => {\r\n                        setAttributes( { url: media.url } );\r\n                    \r\n                        try {\r\n                            const response = await fetch( '/wp-json/transcript-blocks/v1/parse-transcript', {\r\n                                method: 'POST',\r\n                                headers: {\r\n                                    'Content-Type': 'application/json',\r\n                                },\r\n                                body: JSON.stringify( { id: media.id } ),\r\n                            } );\r\n                    \r\n                            if ( ! response.ok ) {\r\n                                throw new Error( 'HTTP error ' + response.status );\r\n                            }\r\n                    \r\n                            const parsedContents = await response.json();\r\n                            setAttributes( { transcript: parsedContents } );\r\n                        } catch ( error ) {\r\n                            console.error( error );\r\n                        }\r\n                    } }\r\n                    allowedTypes={ [ 'text/plain' ] }  // Adjust according to the file types you want to allow\r\n                    render={ ( { open } ) => (\r\n                        <Button onClick={ open }>\r\n                            Upload File\r\n                        </Button>\r\n                    ) }\r\n                />\r\n    \r\n                {/* Add this to display the transcript in the editor */}\r\n                { attributes.transcript && attributes.transcript.map( ( { speaker, speech }, i ) => (\r\n                    <div key={i}>\r\n                        <strong>{ speaker }</strong>: { speech }\r\n                    </div>\r\n                ) ) }\r\n            </div>\r\n        );\r\n    },\r\n    save: ( { attributes } ) => {\r\n        return (\r\n            <div>\r\n                { attributes.url && <a href={ attributes.url } download>Download Transcript</a> }\r\n                { attributes.transcript && attributes.transcript.map( ( { speaker, speech }, i ) => (\r\n                    <div key={i}>\r\n                        <strong>{ speaker }</strong>: { speech }\r\n                    </div>\r\n                ) ) }\r\n            </div>\r\n        );\r\n    },\r\n    \r\n} );\r\n"],"names":["registerBlockType","useBlockProps","MediaUpload","Button","console","log","apiVersion","title","description","category","icon","supports","html","attributes","url","type","default","transcript","edit","_ref","setAttributes","createElement","onSelect","media","response","fetch","method","headers","body","JSON","stringify","id","ok","Error","status","parsedContents","json","error","allowedTypes","render","_ref2","open","onClick","map","_ref3","i","speaker","speech","key","save","_ref4","href","download","_ref5"],"sourceRoot":""}